{
    "uuid": "ead85c48-d422-49d9-8a36-20cf3de85770",
    "filename": "/Users/siyuliu/Desktop/MacBot/src/tool_source_code/pymatgen-analysis-defects/tests/test_finder.py",
    "imports": [],
    "classes": [],
    "global functions": [
        "def test_defect_finder(test_dir) -> None:\n    from pymatgen.analysis.defects.finder import DefectSiteFinder\n    from pymatgen.core import IStructure\n\n    base = IStructure.from_file(test_dir / \"GaN.vasp\")\n\n    # Vacancy\n    sc = base * [2, 2, 2]\n    frac_pos_rm = sc.sites[9].frac_coords\n    sc.remove_sites([9])\n    finder = DefectSiteFinder()\n    frac_pos_guess = finder.get_native_defect_position(sc, base)\n    dist, _ = sc.lattice.get_distance_and_image(frac_pos_guess, frac_pos_rm)\n    assert dist < 0.5\n\n    # Interstitial\n    sc = base * [2, 2, 2]\n    frac_pos_insert = [0.666665, 0.333335, 0.31206]\n    sc.insert(0, \"Ga\", frac_pos_insert)\n    frac_pos_guess = finder.get_native_defect_position(sc, base)\n    dist, _ = sc.lattice.get_distance_and_image(frac_pos_guess, frac_pos_insert)\n    assert dist < 0.5\n\n    # Anti-site\n    sc = base * [2, 2, 2]\n    Ga_pos = sc.sites[12].frac_coords\n    N_pos = sc.sites[16].frac_coords\n    dist, _ = sc.lattice.get_distance_and_image(Ga_pos, N_pos)\n    assert dist < 2\n    # swapping two sites that are close to each other\n    sc.remove_sites([16])\n    sc.remove_sites([12])\n    # have the distort slightly to the midpoint\n    mid_point = (N_pos + Ga_pos) / 2\n    sc.insert(0, \"N\", 0.99 * Ga_pos + 0.01 * mid_point)\n    sc.insert(0, \"Ga\", 0.99 * N_pos + 0.01 * mid_point)\n\n    frac_pos_guess = finder.get_native_defect_position(sc, base)\n    dist, _ = sc.lattice.get_distance_and_image(frac_pos_guess, mid_point)\n    assert dist < 0.5"
    ],
    "global variables": []
}