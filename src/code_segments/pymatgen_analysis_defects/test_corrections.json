{
    "uuid": "d3440a0e-6d87-477f-baae-ee1ef5527870",
    "filename": "/Users/siyuliu/Desktop/MacBot/src/tool_source_code/pymatgen-analysis-defects/tests/test_corrections.py",
    "imports": [
        "import pytest",
        "from pymatgen.analysis.defects.corrections.freysoldt import (\n    get_freysoldt_correction,\n    plot_plnr_avg,\n)",
        "from pymatgen.analysis.defects.corrections.kumagai import (\n    get_efnv_correction,\n    get_structure_with_pot,\n)"
    ],
    "classes": [],
    "global functions": [
        "def test_freysoldt(data_Mg_Ga) -> None:\n    \"\"\"Older basic test for Freysoldt correction.\"\"\"\n    bulk_locpot = data_Mg_Ga[\"bulk_sc\"][\"locpot\"]\n    defect_locpot = data_Mg_Ga[\"q=0\"][\"locpot\"]\n\n    freysoldt_summary = get_freysoldt_correction(\n        q=0,\n        dielectric=14,\n        defect_locpot=defect_locpot,\n        bulk_locpot=bulk_locpot,\n        defect_frac_coords=[0.5, 0.5, 0.5],\n    )\n    assert freysoldt_summary.correction_energy == pytest.approx(0, abs=1e-4)\n\n    # simple check that the plotter works\n    plot_plnr_avg(freysoldt_summary.metadata[\"plot_data\"][0])\n\n    # different ways to specify the locpot\n    freysoldt_summary = get_freysoldt_correction(\n        q=0,\n        dielectric=14,\n        lattice=defect_locpot.structure.lattice,\n        defect_locpot=defect_locpot,\n        bulk_locpot=bulk_locpot,\n        defect_frac_coords=[0.5, 0.5, 0.5],\n    )\n\n    defect_locpot_dict = {str(k): defect_locpot.get_axis_grid(k) for k in [0, 1, 2]}\n    bulk_locpot_dict = {str(k): bulk_locpot.get_axis_grid(k) for k in [0, 1, 2]}\n    freysoldt_summary = get_freysoldt_correction(\n        q=0,\n        dielectric=14,\n        lattice=defect_locpot.structure.lattice,\n        defect_locpot=defect_locpot_dict,\n        bulk_locpot=bulk_locpot_dict,\n        defect_frac_coords=[0.5, 0.5, 0.5],\n    )",
        "def test_freysoldt_sxdefect_compare(v_N_GaN) -> None:\n    \"\"\"More detailed test for Freysoldt correction.\n\n    Compare against results from the sxdefectalign tool from SPHInX.\n    See the `freysoldt_correction.ipynb` notebook for details.\n    \"\"\"\n    bulk_locpot = v_N_GaN[\"bulk_locpot\"]\n    defect_locpots = v_N_GaN[\"defect_locpots\"]\n    references = {\n        -1: 0.366577,\n        0: 0.0,\n        1: 0.179924,\n        2: 0.772761,\n    }\n    results = {\n        q: get_freysoldt_correction(\n            q=q,\n            dielectric=5,\n            bulk_locpot=bulk_locpot,\n            defect_locpot=defect_locpots[q],\n        ).correction_energy\n        for q in range(-1, 3)\n    }\n    for q in range(-1, 3):\n        assert results[q] == pytest.approx(references[q], abs=1e-3)",
        "def test_kumagai(test_dir):\n    sb = get_structure_with_pot(test_dir / \"Mg_Ga\" / \"bulk_sc\")\n    sd0 = get_structure_with_pot(test_dir / \"Mg_Ga\" / \"q=0\")\n    sd1 = get_structure_with_pot(test_dir / \"Mg_Ga\" / \"q=1\")\n\n    res0 = get_efnv_correction(\n        0, sd0, sb, dielectric_tensor=[[1, 0, 0], [0, 1, 0], [0, 0, 1]]\n    )\n    assert res0.correction_energy == pytest.approx(0, abs=1e-4)\n\n    res1 = get_efnv_correction(\n        1, sd1, sb, dielectric_tensor=[[1, 0, 0], [0, 1, 0], [0, 0, 1]]\n    )\n    assert res1.correction_energy > 0",
        "def test_kumagai_missing():\n    from pymatgen.analysis.defects.corrections import kumagai\n\n    kumagai.__has_pydefect__ = False\n    with pytest.raises(ImportError):\n        kumagai._check_import_pydefect()"
    ],
    "global variables": []
}